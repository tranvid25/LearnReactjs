Cú pháp 
useEffect(callback,[deps])
sử dụng 
+callAPI
Cập nhật DOM
lắng nge DOM(event,scroll,resize)
clean up
Các cách để sử dụng
useEfect(callback)
useEffect(callback,[])
useEffect(callback,[deps])
chạy sau khi hiển thị ra màn hình 
+useLayoutEffect chạy trc khi hiển thị ra màn hình 
+đo kích thước, scroll,chỉnh css 
chỉ dùng layout nếu thao tác kích thước
+useRef là một hook cho phép bạn tạo ra đối tượng tham chiếu mà bạn có thể gán các phần tử dom hoặc lưu
giá trị mà ko cần lm mới component
nó lưu giá trị tạm ko cần render lưu biến 

+React.memo để tối ưu hóa hiệu suất của các thành phần chức năng
bằng cách ngăn chặn việc render lại không cần thiết
nó sẽ chỉ render lại component con nếu có sự thay đổi trong props.

+USECALLBACK giúp bạn tối ưu hóa hiệu suât bằng cách ghi nhớ các hàm và chỉ tái tạo chúng kh các phụ thuộc thay đổi 
điều này đặc biệt hữu ích khi bạn truyền các hàm như props vào các component con
ngăn chặn component con render ko cần thiết,hki có các hàm phức tạp cần tái tạo

+USEMEMO đc sử dụng để tối ưu hóa hiệu suất bằng cách ghi nhớ kết quả phép tính 

+USEREDUCER là một hook đc sử dụng để quản lý state phức tạp hơn so với useState.
nó đặc biệt hữu ích khi state phụ thuộc vào nhiều hành động khác nhau hoặc khi state có cấu trúc
phức tạp
nó giống với Redux ở chỗ nó cho phép bạn định nghĩa 1 reducer để cập nhật dựa trên các hàng động